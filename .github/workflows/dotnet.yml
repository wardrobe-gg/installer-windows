# This workflow will build a .NET project and create a GitHub release
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build Installer

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v4
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1
      
      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5
        
      - name: setup-msbuild
        uses: microsoft/setup-msbuild@v1.1
      
      - name: Restore Packages
        run: nuget restore WardrobeInstaller.sln
      
      - name: Build solution
        run: msbuild WardrobeInstaller.sln -t:rebuild -property:Configuration=Release

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v4.6.1
        with:
          name: "Installer"
          path: "bin/Release/*.exe"

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: "Installer"

      - name: Get Current Date and Time
        id: datetime
        run: echo "tag_name=$(date +'%Y-%m-%d-%H%M%S')" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.tag_name }}
          release_name: "Release ${{ env.tag_name }}"
          body: "This release was created on ${{ env.tag_name }}."
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "bin/Release/*.exe"
          asset_name: "Installer.exe"
          asset_content_type: application/octet-stream
